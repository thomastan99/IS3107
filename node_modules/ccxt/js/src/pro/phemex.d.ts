import phemexRest from '../phemex.js';
export default class phemex extends phemexRest {
    describe(): any;
    fromEn(en: any, scale: any): string;
    fromEp(ep: any, market?: any): any;
    fromEv(ev: any, market?: any): any;
    fromEr(er: any, market?: any): any;
    requestId(): any;
    parseSwapTicker(ticker: any, market?: any): {
        symbol: any;
        timestamp: number;
        datetime: string;
        high: number;
        low: number;
        bid: any;
        bidVolume: any;
        ask: any;
        askVolume: any;
        vwap: any;
        open: number;
        close: number;
        last: number;
        previousClose: any;
        change: any;
        percentage: any;
        average: any;
        baseVolume: number;
        quoteVolume: number;
        info: any;
    };
    handleTicker(client: any, message: any): void;
    watchBalance(params?: {}): Promise<any>;
    handleBalance(type: any, client: any, message: any): void;
    handleTrades(client: any, message: any): void;
    handleOHLCV(client: any, message: any): void;
    watchTicker(symbol: any, params?: {}): Promise<any>;
    watchTrades(symbol: any, since?: any, limit?: any, params?: {}): Promise<any>;
    watchOrderBook(symbol: any, limit?: any, params?: {}): Promise<any>;
    watchOHLCV(symbol: any, timeframe?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    handleDelta(bookside: any, delta: any, market?: any): void;
    handleDeltas(bookside: any, deltas: any, market?: any): void;
    handleOrderBook(client: any, message: any): void;
    watchMyTrades(symbol?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    handleMyTrades(client: any, message: any): void;
    watchOrders(symbol?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    handleOrders(client: any, message: any): void;
    parseWSSwapOrder(order: any, market?: any): any;
    handleMessage(client: any, message: any): void;
    handleAuthenticate(client: any, message: any): any;
    subscribePrivate(type: any, messageHash: any, params?: {}): Promise<any>;
    authenticate(params?: {}): Promise<any>;
}
